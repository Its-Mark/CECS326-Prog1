//
// Created by mark on 2/17/21.
//
#include <sys/types.h>
#include <stdio.h>
#include <unistd.h>
#include <pthread.h>
#include <errno.h>
#include <stdlib.h>
#include <signal.h>
#include <string.h>

int sharedVar = 0;
void *SimpleThread(void*i){
    int *p;
    p = i;
    int num, val = 0;
    for (num = 0; num < 20; num++){
        if (random() > RAND_MAX / 2){
            usleep(10);
        }
        val = sharedVar;
        printf("***thread %d sees value %d\n", *p, val);
        sharedVar = val + 1;
    }

    val = sharedVar;

    printf("Thread %d sees final value %d\n",*p, val);
}

int main(int argc, char * argv[]){
    pthread_t *tid;
    //check for valid command line arg.
    if (argc != 2){
        printf("Not enough arguments.");
        return 0;
    } else {
        int n = atoi(argv[1]);
        tid = (pthread_t*)malloc(sizeof(pthread_t) * atoi(argv[1]));
        int *j = (int *)malloc(sizeof(int)*n);
        for (int i = 0; i < n; i++){
            j[i] = i;
        }

        for(int i = 0; i < n; i++){
            pthread_create(&tid[i], NULL, SimpleThread, &j[i]);
        }
        for (int i = 0; i < n; i++){
            pthread_join(tid[i],NULL);
        }
    }


    /*for (int j = 0; j < which; j++){
        SimpleThead(j);
    }*/
    return 0;
}

